
/* ------------------------------------------
   Automatically generated by AN
   ------------------------------------------ */

package it.unibo.is.interfaces.platforms;
import java.util.*;
import it.unibo.is.interfaces.IPolicy;

public interface IOpOut{

//Output operation with no reply/answer  
public void emit( String WorkerName, String SignalId, String Msg , IPolicy policy ) throws Exception
;//emit






//Output operation with no reply/answer  
public void insert( String WorkerName, String TokenId, String Msg , IPolicy policy ) throws Exception
;//insert










//Output operation with no reply/answer  
public void forward( String WorkerName, String DispatchId, String Msg , String ReceiverName, IPolicy policy ) throws Exception
;//forward




//Output operation with reply/answer given by the platform
public IAcquireOneReply ask(  
	String WorkerName, String InvitationId, String Msg , String ReceiverName, IPolicy policy  ) throws Exception
;//ask

public IAcquireOneReply ask(  
		String WorkerName, String InvitationId, String Msg , String ReceiverName, String msgNum, IPolicy policy  ) throws Exception
;//ask


//Output operation with reply/answer given by the platform
public IAcquireManyReply askM(  
	String WorkerName, String InvitationId, String Msg , List<String> DestList   ) throws Exception
;//askM


//Output operation with reply/answer given by the application
public IAcquireOneReply demand(  
	String WorkerName, String RequestId, String Msg , String ReceiverName , IPolicy policy ) 
		throws Exception
;//demand

public IAcquireOneReply demand(  
		String WorkerName, String RequestId, String Msg , String ReceiverName , String msgNum,  IPolicy policy ) 
			throws Exception
	;//demand


//Output operation with reply/answer given by the application
public IAcquireManyReply demandM(  
	String WorkerName, String RequestId, String Msg , List<String> DestList   ) 
		throws Exception
;//demandM

public void terminate() throws Exception;

}
